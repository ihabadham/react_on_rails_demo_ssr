# syntax=docker/dockerfile:1

# Development-only Dockerfile
# Use this with docker-compose for local dev on Windows/macOS/Linux

ARG RUBY_VERSION=3.3.5
FROM docker.io/library/ruby:${RUBY_VERSION}-slim

WORKDIR /rails

# System deps for Ruby gems, SQLite, and JS builds
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y \
    build-essential \
    git \
    curl \
    ca-certificates \
    libyaml-dev \
    pkg-config \
    sqlite3 \
    libsqlite3-dev \
    libvips && \
    rm -rf /var/lib/apt/lists /var/cache/apt/archives

# Install Node.js (20.x) for Shakapacker/Webpack
RUN mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg && \
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" > /etc/apt/sources.list.d/nodesource.list && \
    apt-get update -qq && apt-get install --no-install-recommends -y nodejs && \
    rm -rf /var/lib/apt/lists /var/cache/apt/archives

ENV RAILS_ENV=development \
    BUNDLE_PATH=/usr/local/bundle \
    BUNDLE_JOBS=4 \
    BUNDLE_RETRY=3

# Pre-install Ruby and JS deps for better layer caching
COPY Gemfile Gemfile.lock ./
RUN bundle install && rm -rf ~/.bundle /usr/local/bundle/ruby/*/cache

COPY package.json package-lock.json ./
RUN npm install --no-audit --no-fund

# App code will be bind-mounted by docker-compose; no COPY here

EXPOSE 3000 3035

# Default command is a shell; docker-compose sets actual commands per service
CMD ["bash"]

